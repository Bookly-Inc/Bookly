This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repopack on: 2024-10-24T03:38:31.667Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
milestones/
  milestone1.md
  milestone2.md
  milestone3.md
  milestone4.md
  milestone5.md
planning/
  entity_relationship_diagram.md
  user_stories.md
  wireframes.md
README.md

================================================================
Repository Files
================================================================

================
File: milestones/milestone1.md
================
# Milestone 1

This document should be completed and submitted during **Unit 5** of this course. You **must** check off all completed tasks in this document in order to receive credit for your work.

## Checklist

This unit, be sure to complete all tasks listed below. To complete a task, place an `x` between the brackets.

- [ ] Read and understand all required features
  - [ ] Understand you **must** implement **all** baseline features and **two** custom features
- [ ] In `readme.md`: update app name
- [ ] In `readme.md`: add all group members' names
- [ ] In `readme.md`: complete the **Description and Purpose** section
- [ ] In `readme.md`: complete the **Inspiration** section
- [ ] In `readme.md`: list all features you intend to include in your app (in future units, you will check off features as you complete them and add GIFs demonstrating the features)
- [ ] In `planning/user_stories.md`: add all user stories
- [ ] In this document, complete the **Reflection** section below

## Reflection

### 1. What went well during this unit?

[👉🏾👉🏾👉🏾 your answer here]

### 2. What were some challenges your group faced in this unit?

[👉🏾👉🏾👉🏾 your answer here]

### 3. What additional support will you need in upcoming units as you continue to work on your final project?

[👉🏾👉🏾👉🏾 your answer here]

================
File: milestones/milestone2.md
================
# Milestone 2

This document should be completed and submitted during **Unit 6** of this course. You **must** check off all completed tasks in this document in order to receive credit for your work.

## Checklist

This unit, be sure to complete all tasks listed below. To complete a task, place an `x` between the brackets.

- [ ] In `planning/wireframes.md`: add wireframes for at least three pages in your web app
- [ ] In `planning/entity_relationship_diagram.md`: add the entity relationship diagram you developed for your database
- [ ] Prepare your three-minute pitch presentation, to be presented during Unit 7 (the next unit)
  - [ ] You do **not** need to submit any materials in advance of your pitch
- [ ] In this document, complete the **Reflection** section below

## Reflection

### 1. What went well during this unit?

[👉🏾👉🏾👉🏾 your answer here]

### 2. What were some challenges your group faced in this unit?

[👉🏾👉🏾👉🏾 your answer here]

### 3. What additional support will you need in upcoming units as you continue to work on your final project?

[👉🏾👉🏾👉🏾 your answer here]

================
File: milestones/milestone3.md
================
# Milestone 3

This document should be completed and submitted during **Unit 7** of this course. You **must** check off all completed tasks in this document in order to receive credit for your work.

## Checklist

This unit, be sure to complete all tasks listed below. To complete a task, place an `x` between the brackets.

You will need to reference the GitHub Project Management guide in the course portal for more information about how to complete each of these steps.

- [ ] Create a project board associated with this repo
- [ ] In this repo, create GitHub milestones for each of the remaining milestones in this unit
- [ ] In this repo, create issues for each feature on your feature list
  - [ ] Make sure to add the issues to your project board and to the appropriate milestones
- [ ] Update the status of issues in your project board as you complete them
- [ ] In `readme.md`, check off the features you have completed in this unit by adding a ✅ emoji in front of their title
  - [ ] Under each feature you have completed, **include a GIF** showing feature functionality
- [ ] In this document, complete the **Reflection** section below

## Reflection

### 1. What went well during this unit?

[👉🏾👉🏾👉🏾 your answer here]

### 2. What were some challenges your group faced in this unit?

[👉🏾👉🏾👉🏾 your answer here]

### Did you finish all of your tasks in your sprint plan for this week? If you did not finish all of the planned tasks, how would you prioritize the remaining tasks on your list?

[👉🏾👉🏾👉🏾 your answer here]

### Which features and user stories would you consider “at risk”? How will you change your plan if those items remain “at risk”?

[👉🏾👉🏾👉🏾 your answer here]

### 5. What additional support will you need in upcoming units as you continue to work on your final project?

[👉🏾👉🏾👉🏾 your answer here]

================
File: milestones/milestone4.md
================
# Milestone 4

This document should be completed and submitted during **Unit 8** of this course. You **must** check off all completed tasks in this document in order to receive credit for your work.

## Checklist

This unit, be sure to complete all tasks listed below. To complete a task, place an `x` between the brackets.

- [ ] Update the status of issues in your project board as you complete them
- [ ] In `readme.md`, check off the features you have completed in this unit by adding a ✅ emoji in front of their title
  - [ ] Under each feature you have completed, **include a GIF** showing feature functionality
- [ ] In this document, complete the **Reflection** section below

## Reflection

### 1. What went well during this unit?

[👉🏾👉🏾👉🏾 your answer here]

### 2. What were some challenges your group faced in this unit?

[👉🏾👉🏾👉🏾 your answer here]

### Did you finish all of your tasks in your sprint plan for this week? If you did not finish all of the planned tasks, how would you prioritize the remaining tasks on your list?

[👉🏾👉🏾👉🏾 your answer here]

### Which features and user stories would you consider “at risk”? How will you change your plan if those items remain “at risk”?

[👉🏾👉🏾👉🏾 your answer here]

### 5. What additional support will you need in upcoming units as you continue to work on your final project?

[👉🏾👉🏾👉🏾 your answer here]

================
File: milestones/milestone5.md
================
# Milestone 5

This document should be completed and submitted during **Unit 9** of this course. You **must** check off all completed tasks in this document in order to receive credit for your work.

## Checklist

This unit, be sure to complete all tasks listed below. To complete a task, place an `x` between the brackets.

- [ ] Deploy your project on Railway
  - [ ] In `readme.md`, add the link to your deployed project
- [ ] Update the status of issues in your project board as you complete them
- [ ] In `readme.md`, check off the features you have completed in this unit by adding a ✅ emoji in front of their title
  - [ ] Under each feature you have completed, **include a GIF** showing feature functionality
- [ ] In this document, complete the **Reflection** section below
- [ ] 🚩🚩🚩**Complete the Final Project Feature Checklist section below**, detailing each feature you completed in the project (ONLY include features you implemented, not features you planned)
- [ ] 🚩🚩🚩**Record a GIF showing a complete run-through of your app** that displays all the components included in the **Final Project Feature Checklist** below
  - [ ] Include this GIF in the **Final Demo GIF** section below

## Final Project Feature Checklist

Complete the checklist below detailing each baseline, custom, and stretch feature you completed in your project. This checklist will help graders look for each feature in the GIF you submit.

### Baseline Features

👉🏾👉🏾👉🏾 Check off each completed feature below.

- [ ] The project includes an Express backend app and a React frontend app
- [ ] The project includes these backend-specific features:
  - [ ] At least one of each of the following database relationship in Postgres
    - [ ] one-to-many
    - [ ] many-to-many with a join table
  - [ ] A well-designed RESTful API
    - [ ] The API can respond to at least one of each type of request: GET, POST, PATCH, and DELETE
    - [ ] Routes follow proper naming conventions
  - [ ] The ability to reset the database to its default state
- [ ] The project includes these frontend-specific features:
  - [ ] At least one redirection
  - [ ] At least one interaction that the user can initiate and complete on the same page without navigating to a new page
  - [ ] Dynamic frontend routes created with React Router
  - [ ] Hierarchically designed React components
    - [ ] Components broken down into categories, including Page and Component types
    - [ ] Corresponding container components and presenter components as appropriate
- [ ] The project includes dynamic routes for both frontend and backend apps
- [ ] The project is deployed on Railway with all pages and features working

### Custom Features

👉🏾👉🏾👉🏾 Check off each completed feature below.

- [ ] The project gracefully handles errors
- [ ] The project includes a one-to-one database relationship
- [ ] The project includes a slide-out pane or modal as appropriate for your use case
- [ ] The project includes a unique field within the join table
- [ ] The project includes a custom non-RESTful route with corresponding controller actions
- [ ] The project allows filtering and/or sorting as appropriate for your use case
- [ ] Data is automatically generated in response to a certain event or user action. Examples include generating a default inventory for a new user starting a game or creating a starter set of tasks for a user creating a new task app account
- [ ] Data submitted via a POST or PATCH request is validated before the database is updated

### Stretch Features

👉🏾👉🏾👉🏾 Check off each completed feature below.

- [ ] A subset of pages require the user to log in before accessing the content
  - [ ] Users can log in and log out via GitHub OAuth with Passport.js
- [ ] Restrict available user options dynamically, such as restricting available purchases based on a user's currency
- [ ] Show a spinner while a page or page element is loading
- [ ] Disable buttons and inputs during the form submission process
- [ ] Disable buttons after they have been clicked
- [ ] Users can upload images to the app and have them be stored on a cloud service
- [ ] 🍞 [Toast messages](https://www.patternfly.org/v3/pattern-library/communication/toast-notifications/index.html) deliver simple feedback in response to user events

## Final Demo GIF

🔗 [Here's a GIF walkthrough of the final project](👉🏾👉🏾👉🏾 your link here)

## Reflection

### 1. What went well during this unit?

[👉🏾👉🏾👉🏾 your answer here]

### 2. What were some challenges your group faced in this unit?

[👉🏾👉🏾👉🏾 your answer here]

### 3. What were some of the highlights or achievements that you are most proud of in this project?

[👉🏾👉🏾👉🏾 your answer here]

### 4. Reflecting on your web development journey so far, how have you grown since the beginning of the course?

[👉🏾👉🏾👉🏾 your answer here]

### 5. Looking ahead, what are your goals related to web development, and what steps do you plan to take to achieve them?

[👉🏾👉🏾👉🏾 your answer here]

================
File: planning/entity_relationship_diagram.md
================
# Entity Relationship Diagram

Reference the Creating an Entity Relationship Diagram final project guide in the course portal for more information about how to complete this deliverable.

## Create the List of Tables

[👉🏾👉🏾👉🏾 List each table in your diagram]

## Add the Entity Relationship Diagram

[👉🏾👉🏾👉🏾 Include an image or images of the diagram below. You may also wish to use the following markdown syntax to outline each table, as per your preference.]

| Column Name | Type | Description |
|-------------|------|-------------|
| id | integer | primary key |
| name | text | name of the shoe model |
| ... | ... | ... |

================
File: planning/user_stories.md
================
# User Stories

Reference the Writing User Stories final project guide in the course portal for more information about how to complete each of the sections below.

## Outline User Roles

[👉🏾👉🏾👉🏾 Include at least at least 1, but no more than 3, user roles.]

## Draft User Stories

[👉🏾👉🏾👉🏾 Include at least at least 10 user stories in this format:]

1. As a [user role], I want to [what], so that [why].

================
File: planning/wireframes.md
================
# Wireframes

Reference the Creating an Entity Relationship Diagram final project guide in the course portal for more information about how to complete this deliverable.

## List of Pages

[👉🏾👉🏾👉🏾 List the pages you expect to have in your app, with a ⭐ next to pages you have wireframed]

## Wireframe 1: [page title]

[👉🏾👉🏾👉🏾 include wireframe 1]

## Wireframe 2: [page title]

[👉🏾👉🏾👉🏾 include wireframe 2]

## Wireframe 3: [page title]

[👉🏾👉🏾👉🏾 include wireframe 3]

[👉🏾👉🏾👉🏾 include more wireframes as desired]

================
File: README.md
================
# [your app name here]

CodePath WEB103 Final Project

Designed and developed by: [your names here]

🔗 Link to deployed app:

## About

### Description and Purpose

[text goes here]

### Inspiration

[text goes here]

## Tech Stack

Frontend:

Backend:

## Features

### [Name of Feature 1]

[short description goes here]

[gif goes here]

### [Name of Feature 2]

[short description goes here]

[gif goes here]

### [Name of Feature 3]

[short description goes here]

[gif goes here]

### [ADDITIONAL FEATURES GO HERE - ADD ALL FEATURES HERE IN THE FORMAT ABOVE; you will check these off and add gifs as you complete them]

## Installation Instructions

[instructions go here]
